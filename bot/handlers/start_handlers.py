from telegram import Update
from telegram.ext import CallbackContext
from .keyboards import generate_event_keyboard, generate_budget_keyboard
from bot.message_tools import safe_delete_message
from bot.handlers.order_handlers import process_order_step
from bot.handlers.consult_handlers import process_consult_request



def handle_start(update: Update, context: CallbackContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Å–æ–±—ã—Ç–∏—è.
    """
    welcome_text = "–ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π."
    update.message.reply_text(
        text=welcome_text,
        reply_markup=generate_event_keyboard()
    )

def handle_event_selection(update: Update, context: CallbackContext):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–æ–±—ã—Ç–∏—è.
    –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω 'custom', –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç;
    –∏–Ω–∞—á–µ ‚Äì —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞.
    """
    query = update.callback_query
    data = query.data
    safe_delete_message(query)
    if data == "custom":
        query.message.reply_text("üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –ø–æ–≤–æ–¥:")
        context.user_data["awaiting_custom_event"] = True
    else:
        context.user_data["event"] = data
        query.message.reply_text(
            text="üí∞ –ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?",
            reply_markup=generate_budget_keyboard()
        )

def handle_messages(update: Update, context: CallbackContext):
    """
    –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∑–∞—Ç–µ–º ‚Äì –¥—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
    """
    if context.user_data.get("awaiting_phone"):
        process_consult_request(update, context)
    elif context.user_data.get("awaiting_custom_event"):
        custom_event = update.message.text.strip()
        context.user_data["event"] = custom_event
        context.user_data.pop("awaiting_custom_event", None)
        update.message.reply_text(
            text="üí∞ –ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?",
            reply_markup=generate_budget_keyboard()
        )
    elif "order_step" in context.user_data:
        process_order_step(update, context)
    else:
        update.message.reply_text("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")

